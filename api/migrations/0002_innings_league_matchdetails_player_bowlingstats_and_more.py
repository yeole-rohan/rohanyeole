# Generated by Django 5.1.7 on 2025-04-08 16:28

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Innings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(choices=[(1, 'First Innings'), (2, 'Second Innings')], default=1)),
                ('total_runs', models.PositiveIntegerField(default=0)),
                ('wickets', models.PositiveSmallIntegerField(default=0)),
                ('overs', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('extras', models.PositiveSmallIntegerField(default=0)),
                ('complete', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'League',
                'verbose_name_plural': 'Leagues',
            },
        ),
        migrations.CreateModel(
            name='MatchDetails',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match_type', models.CharField(choices=[('test', 'Test Match'), ('odi', 'One Day International'), ('t20', 'Twenty20'), ('friendly', 'Friendly'), ('league', 'League Match'), ('semi_final', 'Semi Final'), ('final', 'Final')], default='league', max_length=20)),
                ('scheduled_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('live', 'Live'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('result', models.TextField(blank=True, null=True)),
                ('match_number', models.PositiveSmallIntegerField(default=1)),
                ('toss_decision', models.CharField(max_length=10, null=True)),
                ('current_innings', models.PositiveSmallIntegerField(default=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('first_innings', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_innings', to='api.innings')),
                ('second_innings', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='second_innings', to='api.innings')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('player_role', models.CharField(choices=[('BT', 'Batsman'), ('BW', 'Bowler'), ('AR', 'All-Rounder'), ('WK', 'Wicket-Keeper'), ('CP', 'Captain'), ('VC', 'Vice Captain')], default='BT', max_length=2)),
                ('batting_style', models.CharField(blank=True, choices=[('RH', 'Right-handed'), ('LH', 'Left-handed'), ('SH', 'Switch Hitter')], max_length=2, null=True)),
                ('bowling_style', models.CharField(blank=True, choices=[('F', 'Fast'), ('MF', 'Medium Fast'), ('OS', 'Off Spin'), ('LS', 'Leg Spin'), ('CM', 'Chinaman'), ('SL', 'Slow Left-arm Orthodox')], max_length=2, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BowlingStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('overs', models.DecimalField(decimal_places=1, default=0.0, max_digits=4)),
                ('maidens', models.PositiveSmallIntegerField(default=0)),
                ('runs_conceded', models.PositiveIntegerField(default=0)),
                ('wickets', models.PositiveSmallIntegerField(default=0)),
                ('wides', models.PositiveSmallIntegerField(default=0)),
                ('no_balls', models.PositiveSmallIntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.matchdetails')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BattingStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('runs', models.PositiveIntegerField(default=0)),
                ('balls_faced', models.PositiveIntegerField(default=0)),
                ('fours', models.PositiveSmallIntegerField(default=0)),
                ('sixes', models.PositiveSmallIntegerField(default=0)),
                ('not_out', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_batting_stat', to='api.matchdetails')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_batting', to='api.player')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('live', 'live'), ('completed', 'Completed')], default='upcoming', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_series', to='api.league')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='matchdetails',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='api.series'),
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('cricket', 'Cricket'), ('football', 'Football'), ('basketball', 'Basketball'), ('tennis', 'Tennis'), ('baseball', 'Baseball'), ('hockey', 'Hockey'), ('rugby', 'Rugby'), ('golf', 'Golf'), ('esports', 'Esports')], max_length=100, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sport',
                'verbose_name_plural': 'Sports',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='sport',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.sport'),
        ),
        migrations.AddField(
            model_name='league',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sport_leagues', to='api.sport'),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('short_code', models.CharField(max_length=10)),
                ('logo', models.ImageField(upload_to='teams/')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_sport', to='api.sport')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'sport')},
            },
        ),
        migrations.AddField(
            model_name='matchdetails',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='api.team'),
        ),
        migrations.AddField(
            model_name='matchdetails',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='api.team'),
        ),
        migrations.AddField(
            model_name='matchdetails',
            name='toss_winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.team'),
        ),
        migrations.AddField(
            model_name='innings',
            name='batting_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batting_innings', to='api.team'),
        ),
        migrations.AddField(
            model_name='innings',
            name='bowling_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bowling_innings', to='api.team'),
        ),
        migrations.CreateModel(
            name='TeamPlayer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier (UUID) for this record.', primary_key=True, serialize=False, unique=True, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Venue',
                'verbose_name_plural': 'Venues',
            },
        ),
        migrations.AddField(
            model_name='matchdetails',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.venue'),
        ),
        migrations.AlterUniqueTogether(
            name='league',
            unique_together={('sport', 'name')},
        ),
    ]
